openapi: '3.0.0'
info:
  version: 1.0.0
  title: Swagger Daisuki
  description: A official Daisuki REST API
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: /v1

tags:
  - name: Health
    description: Health check endpoints

paths:
  # start: health paths
  /health/live:
    get:
      description: |
        check if the service is live
      # OpenAPI's operationId may be used to to specify the operation id
      operationId: live
      # x-eov-operation-id may be used to specify the operation id
      # Used when operationId is omiited. Overrides operationId when both are specified
      x-eov-operation-id: live
      # specifies the path to the operation handler.
      # the path is relative to the operationHandlers option
      # e.g. operations/base/path/routes/ping.js
      x-eov-operation-handler: .
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /health/ready:
    get:
      description: |
        check if the service is ready
      operationId: ready
      x-eov-operation-id: ready
      x-eov-operation-handler: .
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  # end: health paths

  # start: authentication paths
  /register:
    post:
      summary: Register a new user
      operationId: register
      x-eov-operation-id: register
      x-eov-operation-handler: .
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './components/authentication.yaml#/components/schemas/Register'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      summary: Authenticate as a user
      operationId: login
      x-eov-operation-id: login
      x-eov-operation-handler: .
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './components/authentication.yaml#/components/schemas/Login'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BasicResponse'
                  - type: object
                    required:
                      - token
                    properties:
                      token:
                        type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    # end: authentication paths

components:
  schemas:
    BasicResponse:
      required:
        - message
      properties:
        message:
          type: string

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
